{"ast":null,"code":"import _slicedToArray from \"/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/src/components/Voter/ElectionList.jsx\";\nimport React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport VoterContext from '../../VoterContext';\nimport ElectionCard from '../Voter/ElectionCard';\nimport ElectionModal from '../Voter/ElectionModal';\nimport '../../styles/ColorScheme.css';\nimport '../../styles/ElectionList.css'; // import logo from '../../assets/logos/logo.png';\n\nimport logo from '../../assets/main_logo.png';\nimport ElectionBallot from './ElectionBallot';\nconst propTypes = {\n  elections: PropTypes.array,\n  isLoading: PropTypes.bool // For when we have backend to talk to\n\n};\nconst defaultProps = {\n  elections: [],\n  isLoading: false\n};\n\nfunction ElectionList(props) {\n  const elections = props.elections,\n        isLoading = props.isLoading;\n\n  const _useContext = useContext(VoterContext),\n        dispatch = _useContext.dispatch;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showModal = _useState2[0],\n        setShowModal = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedElection = _useState4[0],\n        setSelectedElection = _useState4[1];\n\n  if (isLoading) {} // silencing warning on not using this prop for now\n\n\n  function handleElectionClick(election) {\n    setSelectedElection(election);\n    setShowModal(true);\n  }\n\n  function renderElectionCards() {\n    const cards = elections.map(election => {\n      return React.createElement(ElectionCard, {\n        onClick: () => handleElectionClick(election),\n        election: election,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    });\n    return cards;\n  }\n\n  function renderHeader() {\n    return React.createElement(\"div\", {\n      className: \"election-list-header-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"election-list-header-logo-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"election-list-header-logo\",\n      src: logo,\n      alt: \"ElectWise\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"election-list-header-titles-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"election-list-header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Available Elections\"), React.createElement(\"div\", {\n      className: \"election-list-header-subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"These elections are curated using your voting registration information.\")));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"election-list-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(ElectionBallot, {\n    election: selectedElection,\n    onClose: () => {\n      setShowModal(false);\n    },\n    show: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), renderHeader(), renderElectionCards());\n}\n\nElectionList.propTypes = propTypes;\nElectionList.defaultProps = defaultProps;\nexport default ElectionList;","map":{"version":3,"sources":["/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/src/components/Voter/ElectionList.jsx"],"names":["React","useContext","useState","PropTypes","VoterContext","ElectionCard","ElectionModal","logo","ElectionBallot","propTypes","elections","array","isLoading","bool","defaultProps","ElectionList","props","dispatch","showModal","setShowModal","selectedElection","setSelectedElection","handleElectionClick","election","renderElectionCards","cards","map","renderHeader"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport VoterContext from '../../VoterContext';\nimport ElectionCard from '../Voter/ElectionCard';\nimport ElectionModal from '../Voter/ElectionModal';\n\nimport '../../styles/ColorScheme.css';\nimport '../../styles/ElectionList.css';\n// import logo from '../../assets/logos/logo.png';\nimport logo from '../../assets/main_logo.png';\n\nimport ElectionBallot from './ElectionBallot';\n\nconst propTypes = {\n    elections: PropTypes.array,\n    isLoading: PropTypes.bool // For when we have backend to talk to\n};\n\nconst defaultProps = {\n    elections: [],\n    isLoading: false\n};\n\nfunction ElectionList(props) {\n    const {\n        elections,\n        isLoading\n    } = props;\n\n    const { dispatch } = useContext(VoterContext);\n\n    const [showModal, setShowModal] = useState(false);\n    const [selectedElection, setSelectedElection] = useState({});\n\n    if (isLoading){} // silencing warning on not using this prop for now\n\n    function handleElectionClick(election) {\n        setSelectedElection(election);\n        setShowModal(true);\n    }\n\n    function renderElectionCards() {\n        const cards = elections.map(election => {\n            return (\n                <ElectionCard\n                    onClick={() => handleElectionClick(election)}\n                    election={election}\n                />\n            );\n        });\n        return cards;\n    }\n\n    function renderHeader() {\n        return (\n            <div className=\"election-list-header-container\">\n                <div className=\"election-list-header-logo-container\">\n                    <img className=\"election-list-header-logo\" src={logo} alt=\"ElectWise\" />\n                </div>\n                <div className=\"election-list-header-titles-container\">\n                    <div className=\"election-list-header-title\">\n                        Available Elections\n                    </div>\n                    <div className=\"election-list-header-subtitle\">\n                        These elections are curated using your voting registration information.\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"election-list-container\">\n            {/* <ElectionModal election={selectedElection} onClose={() => { setShowModal(false); }} show={showModal} /> */}\n            <ElectionBallot election={selectedElection} onClose={() => { setShowModal(false); }} show={showModal} />\n            {renderHeader()}\n            {renderElectionCards()}\n        </div>\n    );\n}\n\nElectionList.propTypes = propTypes;\nElectionList.defaultProps = defaultProps;\nexport default ElectionList;"]},"metadata":{},"sourceType":"module"}