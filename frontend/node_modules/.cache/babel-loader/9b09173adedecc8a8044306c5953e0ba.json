{"ast":null,"code":"import _slicedToArray from \"/Users/benja/Desktop/electwise/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/benja/Desktop/electwise/frontend/src/components/Admin/AdminSettings.jsx\";\nimport React, { useState } from 'react';\nimport Input from '../Common/Input';\nimport Button from '../Common/Button';\n\nfunction AdminSettings(props) {\n  const _props$username = props.username,\n        username = _props$username === void 0 ? \"Settings\" : _props$username;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isReadySubmit = _useState2[0],\n        setIsReadySubmit = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        confirmPassword = _useState6[0],\n        setConfirmPassword = _useState6[1];\n\n  function handleInputChange(event) {\n    if (event.target.name == \"field-password\") {\n      setPassword(event.target.value);\n    } else if (event.target.name == \"field-confirm-password\") {\n      setConfirmPassword(event.target.value);\n    }\n\n    setIsReadySubmit(confirmPassword.length > 0 && password.length > 0);\n  }\n\n  function clearFields(event) {\n    document.getElementsByName(\"field-password\")[0].value = \"\";\n    document.getElementsByName(\"field-confirm-password\")[0].value = \"\";\n    setPassword(\"\");\n    setConfirmPassword(\"\");\n    setIsReadySubmit(false);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Input, {\n    onChange: handleInputChange,\n    placeholder: \"Password\",\n    name: \"field-password\",\n    isPassword: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Input, {\n    onChange: handleInputChange,\n    placeholder: \"Confirm Password\",\n    name: \"field-confirm-password\",\n    isPassword: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Button, {\n    text: \"Cancel\",\n    onClick: clearFields,\n    variant: \"bg-primary-outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Button, {\n    text: \"Update\",\n    enabled: isReadySubmit,\n    variant: \"bg-primary-outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n}\n\nexport default AdminSettings;","map":{"version":3,"sources":["/Users/benja/Desktop/electwise/frontend/src/components/Admin/AdminSettings.jsx"],"names":["React","useState","Input","Button","AdminSettings","props","username","isReadySubmit","setIsReadySubmit","password","setPassword","confirmPassword","setConfirmPassword","handleInputChange","event","target","name","value","length","clearFields","document","getElementsByName"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,0BAGtBA,KAHsB,CAEtBC,QAFsB;AAAA,QAEtBA,QAFsB,gCAEX,UAFW;;AAAA,oBAKgBL,QAAQ,CAAC,KAAD,CALxB;AAAA;AAAA,QAKnBM,aALmB;AAAA,QAKJC,gBALI;;AAAA,qBAMMP,QAAQ,CAAC,EAAD,CANd;AAAA;AAAA,QAMnBQ,QANmB;AAAA,QAMTC,WANS;;AAAA,qBAOoBT,QAAQ,CAAC,EAAD,CAP5B;AAAA;AAAA,QAOnBU,eAPmB;AAAA,QAOFC,kBAPE;;AAS1B,WAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,QAAGA,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,gBAAxB,EAA0C;AACtCN,MAAAA,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaE,KAAd,CAAX;AACH,KAFD,MAGK,IAAGH,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,wBAAxB,EAAkD;AACnDJ,MAAAA,kBAAkB,CAACE,KAAK,CAACC,MAAN,CAAaE,KAAd,CAAlB;AACH;;AAEDT,IAAAA,gBAAgB,CAACG,eAAe,CAACO,MAAhB,GAAyB,CAAzB,IAA8BT,QAAQ,CAACS,MAAT,GAAkB,CAAjD,CAAhB;AACH;;AAED,WAASC,WAAT,CAAqBL,KAArB,EAA4B;AACxBM,IAAAA,QAAQ,CAACC,iBAAT,CAA2B,gBAA3B,EAA6C,CAA7C,EAAgDJ,KAAhD,GAAwD,EAAxD;AACAG,IAAAA,QAAQ,CAACC,iBAAT,CAA2B,wBAA3B,EAAqD,CAArD,EAAwDJ,KAAxD,GAAgE,EAAhE;AACAP,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAJ,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEK,iBAAjB;AAAoC,IAAA,WAAW,EAAC,UAAhD;AAA2D,IAAA,IAAI,EAAC,gBAAhE;AAAiF,IAAA,UAAU,EAAE,IAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEA,iBAAjB;AAAoC,IAAA,WAAW,EAAC,kBAAhD;AAAmE,IAAA,IAAI,EAAC,wBAAxE;AAAiG,IAAA,UAAU,EAAE,IAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEM,WAA/B;AAA4C,IAAA,OAAO,EAAC,oBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEZ,aAA/B;AAA8C,IAAA,OAAO,EAAC,oBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH;;AAED,eAAeH,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport Input from '../Common/Input'\nimport Button from '../Common/Button'\n\n\nfunction AdminSettings(props) {\n    const {\n        username = \"Settings\",\n    } = props;\n\n    const [isReadySubmit, setIsReadySubmit] = useState(false);\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    function handleInputChange(event) {\n        if(event.target.name == \"field-password\") {\n            setPassword(event.target.value);\n        }\n        else if(event.target.name == \"field-confirm-password\") {\n            setConfirmPassword(event.target.value);\n        }\n\n        setIsReadySubmit(confirmPassword.length > 0 && password.length > 0);\n    }\n\n    function clearFields(event) {\n        document.getElementsByName(\"field-password\")[0].value = \"\";\n        document.getElementsByName(\"field-confirm-password\")[0].value = \"\";\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n        setIsReadySubmit(false);\n    }\n\n    return (\n        <div>\n            <Input onChange={handleInputChange} placeholder=\"Password\" name=\"field-password\" isPassword={true}/>\n            <Input onChange={handleInputChange} placeholder=\"Confirm Password\" name=\"field-confirm-password\" isPassword={true}/>\n            <Button text=\"Cancel\" onClick={clearFields} variant=\"bg-primary-outline\" />\n            <Button text=\"Update\" enabled={isReadySubmit} variant=\"bg-primary-outline\" />\n        </div>\n    )\n}\n\nexport default AdminSettings;\n"]},"metadata":{},"sourceType":"module"}