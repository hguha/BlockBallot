{"ast":null,"code":"import _slicedToArray from \"/Users/benja/Desktop/electwise/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/benja/Desktop/electwise/frontend/src/components/Voter/VoterDashboard.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ElectionList from '../Voter/ElectionList';\nimport ElectionBallot from '../Voter/ElectionBallot';\nimport { getElections } from \"../../services/VoterService\";\nimport '../../styles/Common/ColorScheme.css';\nimport '../../styles/Voter/VoterDashboard.css';\nimport '../../styles/Common/Transitions.css'; // const mockElections = [\n//     {\n//         title: \"Mock Election 1\",\n//         totalVotes: 45780,\n//         opens: \"01/01/1990, 9:00AM\",\n//         closes: \"01/01/1990, 5:00PM\",\n//         categories: [\"Group 0\", \"Group 1\", \"Group 2\"],\n//         options: [{category: 0, key: 0, value: \"Option A\"}, {category: 0, key: 1, value: \"Option B\"}, \n//                   {category: 0, key: 2, value: \"Option C\"}, {category: 0, key: 3, value: \"Option D\"},\n//                   {category: 1, key: 4, value: \"Option E\"}, {category: 1, key: 5, value: \"Option F\"}, \n//                   {category: 1, key: 6, value: \"Option G\"}, {category: 1, key: 7, value: \"Option H\"},\n//                   {category: 2, key: 8, value: \"Option I\"}, {category: 2, key: 9, value: \"Option J\"}, \n//                   {category: 2, key: 10, value: \"Option K\"}, {category: 2, key: 11, value: \"Option L\"}],\n//         results: [{category: 0, key: 12, name: \"Option A\", value: 450}, {category: 0, key: 13, name: \"Option B\", value: 23}, \n//                   {category: 0, key: 14, name: \"Option C\", value: 284}, {category: 0, key: 15, name: \"Option D\", value: 376},\n//                   {category: 1, key: 16, name: \"Option E\", value: 948}, {category: 1, key: 17, name: \"Option F\", value: 46}, \n//                   {category: 1, key: 18, name: \"Option G\", value: 726}, {category: 1, key: 19, name: \"Option H\", value: 878},\n//                   {category: 2, key: 20, name: \"Option I\", value: 86}, {category: 2, key: 21, name: \"Option J\", value: 154}, \n//                   {category: 2, key: 22, name: \"Option K\", value: 74}, {category: 2, key: 23, name: \"Option L\", value: 978}]\n//     },\n//     {\n//         title: \"Mock Election 2\",\n//         totalVotes: 3869,\n//         opens: \"01/01/1990, 9:00AM\",\n//         closes: \"01/02/1990, 5:00PM\",\n//         options: [{ key: 0, value: \"Option A\"}, {key: 1, value: \"Option B\"}, \n//                   {key: 2, value: \"Option C\"}, {key: 3, value: \"Option D\"}]\n//     },\n//     {\n//         title: \"Mock Election 3\",\n//         totalVotes: 87901,\n//         opens: \"01/03/1990, 9:00AM\",\n//         closes: \"01/03/1990, 5:00PM\",\n//         options: [{ key: 0, value: \"Option A\"}, {key: 1, value: \"Option B\"}, \n//                   {key: 2, value: \"Option C\"}, {key: 3, value: \"Option D\"}]\n//     },\n//     {\n//         title: \"Mock Election 4\",\n//         totalVotes: 87901,\n//         opens: \"01/01/1990, 9:00AM\",\n//         closes: \"01/03/1990, 5:00PM\",\n//         options: [{ key: 0, value: \"Option A\"}, {key: 1, value: \"Option B\"}, \n//                   {key: 2, value: \"Option C\"}, {key: 3, value: \"Option D\"}]\n//     },\n//     {\n//         title: \"Mock Election 5\",\n//         totalVotes: 87901,\n//         opens: \"01/03/1990, 9:00AM\",\n//         closes: \"01/05/1990, 5:00PM\",\n//         options: [{ key: 0, value: \"Option A\"}, {key: 1, value: \"Option B\"}, \n//                   {key: 2, value: \"Option C\"}, {key: 3, value: \"Option D\"}]\n//     },\n//     {\n//         title: \"Mock Election 6\",\n//         totalVotes: 87901,\n//         opens: \"01/07/1990, 9:00AM\",\n//         closes: \"01/11/1990, 5:00PM\",\n//         options: [{ key: 0, value: \"Option A\"}, {key: 1, value: \"Option B\"}, \n//                   {key: 2, value: \"Option C\"}, {key: 3, value: \"Option D\"}]\n//     }\n// ];\n\nfunction VoterDashboard() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        elections = _useState2[0],\n        setElections = _useState2[1]; // const [electionsLoaded, setElectionsLoaded] = useState(false);\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoadingElections = _useState4[0],\n        setIsLoadingElections = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedElection = _useState6[0],\n        setSelectedElection = _useState6[1];\n\n  useEffect(() => {\n    setIsLoadingElections(true);\n    const response = getElections();\n    setIsLoadingElections(false);\n    setElections(response);\n  }, []); // if (!electionsLoaded) {\n  //     setIsLoadingElections(true);\n  //     setElections(mockElections);\n  //     setIsLoadingElections(false);\n  //     setElectionsLoaded(true);\n  // }\n\n  function handleElectionClick(election) {\n    setSelectedElection(election);\n  }\n\n  function renderContents() {\n    if (selectedElection) {\n      return React.createElement(ElectionBallot, {\n        election: selectedElection,\n        onClose: () => setSelectedElection(null),\n        show: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(ElectionList, {\n      isLoading: isLoadingElections,\n      elections: elections,\n      onElectionClick: election => handleElectionClick(election),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"voter-dashboard-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, renderContents());\n}\n\nexport default VoterDashboard;","map":{"version":3,"sources":["/Users/benja/Desktop/electwise/frontend/src/components/Voter/VoterDashboard.jsx"],"names":["React","useState","useEffect","ElectionList","ElectionBallot","getElections","VoterDashboard","elections","setElections","isLoadingElections","setIsLoadingElections","selectedElection","setSelectedElection","response","handleElectionClick","election","renderContents"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AAEA,OAAO,qCAAP;AACA,OAAO,uCAAP;AACA,OAAO,qCAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,cAAT,GAA0B;AAAA,oBACYL,QAAQ,CAAC,EAAD,CADpB;AAAA;AAAA,QACfM,SADe;AAAA,QACJC,YADI,kBAEtB;;;AAFsB,qBAG8BP,QAAQ,CAAC,KAAD,CAHtC;AAAA;AAAA,QAGfQ,kBAHe;AAAA,QAGKC,qBAHL;;AAAA,qBAI0BT,QAAQ,CAAC,IAAD,CAJlC;AAAA;AAAA,QAIfU,gBAJe;AAAA,QAIGC,mBAJH;;AAMtBV,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACA,UAAMG,QAAQ,GAAGR,YAAY,EAA7B;AACAK,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAF,IAAAA,YAAY,CAACK,QAAD,CAAZ;AACH,GALQ,EAKN,EALM,CAAT,CANsB,CActB;AACA;AACA;AACA;AACA;AACA;;AAGA,WAASC,mBAAT,CAA6BC,QAA7B,EAAuC;AACnCH,IAAAA,mBAAmB,CAACG,QAAD,CAAnB;AACH;;AAED,WAASC,cAAT,GAA0B;AACtB,QAAIL,gBAAJ,EAAsB;AAClB,aACI,oBAAC,cAAD;AACI,QAAA,QAAQ,EAAEA,gBADd;AAEI,QAAA,OAAO,EAAE,MAAMC,mBAAmB,CAAC,IAAD,CAFtC;AAGI,QAAA,IAAI,EAAE,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAOH;;AACD,WACI,oBAAC,YAAD;AACI,MAAA,SAAS,EAAEH,kBADf;AAEI,MAAA,SAAS,EAAEF,SAFf;AAGI,MAAA,eAAe,EAAGQ,QAAD,IAAcD,mBAAmB,CAACC,QAAD,CAHtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,cAAc,EADnB,CADJ;AAKH;;AAED,eAAeV,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport ElectionList from '../Voter/ElectionList';\nimport ElectionBallot from '../Voter/ElectionBallot';\nimport { getElections } from \"../../services/VoterService\";\n\nimport '../../styles/Common/ColorScheme.css';\nimport '../../styles/Voter/VoterDashboard.css';\nimport '../../styles/Common/Transitions.css';\n\n// const mockElections = [\n//     {\n//         title: \"Mock Election 1\",\n//         totalVotes: 45780,\n//         opens: \"01/01/1990, 9:00AM\",\n//         closes: \"01/01/1990, 5:00PM\",\n//         categories: [\"Group 0\", \"Group 1\", \"Group 2\"],\n//         options: [{category: 0, key: 0, value: \"Option A\"}, {category: 0, key: 1, value: \"Option B\"}, \n//                   {category: 0, key: 2, value: \"Option C\"}, {category: 0, key: 3, value: \"Option D\"},\n//                   {category: 1, key: 4, value: \"Option E\"}, {category: 1, key: 5, value: \"Option F\"}, \n//                   {category: 1, key: 6, value: \"Option G\"}, {category: 1, key: 7, value: \"Option H\"},\n//                   {category: 2, key: 8, value: \"Option I\"}, {category: 2, key: 9, value: \"Option J\"}, \n//                   {category: 2, key: 10, value: \"Option K\"}, {category: 2, key: 11, value: \"Option L\"}],\n//         results: [{category: 0, key: 12, name: \"Option A\", value: 450}, {category: 0, key: 13, name: \"Option B\", value: 23}, \n//                   {category: 0, key: 14, name: \"Option C\", value: 284}, {category: 0, key: 15, name: \"Option D\", value: 376},\n//                   {category: 1, key: 16, name: \"Option E\", value: 948}, {category: 1, key: 17, name: \"Option F\", value: 46}, \n//                   {category: 1, key: 18, name: \"Option G\", value: 726}, {category: 1, key: 19, name: \"Option H\", value: 878},\n//                   {category: 2, key: 20, name: \"Option I\", value: 86}, {category: 2, key: 21, name: \"Option J\", value: 154}, \n//                   {category: 2, key: 22, name: \"Option K\", value: 74}, {category: 2, key: 23, name: \"Option L\", value: 978}]\n//     },\n//     {\n//         title: \"Mock Election 2\",\n//         totalVotes: 3869,\n//         opens: \"01/01/1990, 9:00AM\",\n//         closes: \"01/02/1990, 5:00PM\",\n//         options: [{ key: 0, value: \"Option A\"}, {key: 1, value: \"Option B\"}, \n//                   {key: 2, value: \"Option C\"}, {key: 3, value: \"Option D\"}]\n//     },\n//     {\n//         title: \"Mock Election 3\",\n//         totalVotes: 87901,\n//         opens: \"01/03/1990, 9:00AM\",\n//         closes: \"01/03/1990, 5:00PM\",\n//         options: [{ key: 0, value: \"Option A\"}, {key: 1, value: \"Option B\"}, \n//                   {key: 2, value: \"Option C\"}, {key: 3, value: \"Option D\"}]\n//     },\n//     {\n//         title: \"Mock Election 4\",\n//         totalVotes: 87901,\n//         opens: \"01/01/1990, 9:00AM\",\n//         closes: \"01/03/1990, 5:00PM\",\n//         options: [{ key: 0, value: \"Option A\"}, {key: 1, value: \"Option B\"}, \n//                   {key: 2, value: \"Option C\"}, {key: 3, value: \"Option D\"}]\n//     },\n//     {\n//         title: \"Mock Election 5\",\n//         totalVotes: 87901,\n//         opens: \"01/03/1990, 9:00AM\",\n//         closes: \"01/05/1990, 5:00PM\",\n//         options: [{ key: 0, value: \"Option A\"}, {key: 1, value: \"Option B\"}, \n//                   {key: 2, value: \"Option C\"}, {key: 3, value: \"Option D\"}]\n//     },\n//     {\n//         title: \"Mock Election 6\",\n//         totalVotes: 87901,\n//         opens: \"01/07/1990, 9:00AM\",\n//         closes: \"01/11/1990, 5:00PM\",\n//         options: [{ key: 0, value: \"Option A\"}, {key: 1, value: \"Option B\"}, \n//                   {key: 2, value: \"Option C\"}, {key: 3, value: \"Option D\"}]\n//     }\n// ];\n\nfunction VoterDashboard() {\n    const [elections, setElections] = useState([]);\n    // const [electionsLoaded, setElectionsLoaded] = useState(false);\n    const [isLoadingElections, setIsLoadingElections] = useState(false);\n    const [selectedElection, setSelectedElection] = useState(null);\n\n    useEffect(() => {\n        setIsLoadingElections(true);\n        const response = getElections();\n        setIsLoadingElections(false);\n        setElections(response);\n    }, []);\n\n\n    // if (!electionsLoaded) {\n    //     setIsLoadingElections(true);\n    //     setElections(mockElections);\n    //     setIsLoadingElections(false);\n    //     setElectionsLoaded(true);\n    // }\n\n\n    function handleElectionClick(election) {\n        setSelectedElection(election);\n    }\n\n    function renderContents() {\n        if (selectedElection) {\n            return (\n                <ElectionBallot\n                    election={selectedElection}\n                    onClose={() => setSelectedElection(null) }\n                    show={true}\n                />\n            );\n        } \n        return (\n            <ElectionList\n                isLoading={isLoadingElections}\n                elections={elections} \n                onElectionClick={(election) => handleElectionClick(election)} \n            />\n        );\n    }\n\n    return (\n        <div className=\"voter-dashboard-container\">\n            {renderContents()}\n        </div>\n    );\n}\n\nexport default VoterDashboard;\n"]},"metadata":{},"sourceType":"module"}