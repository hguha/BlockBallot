{"ast":null,"code":"import _slicedToArray from \"/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/src/components/Voter/ElectionBallot.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ElectionBallotReceipt from './ElectionBallotReceipt';\nimport Button from '../Common/Button';\nimport ReChartPieChart from '../Common/ReChartPieChart';\nimport { FiActivity, FiBookOpen, FiBook } from 'react-icons/fi';\nimport '../../styles/ColorScheme.css';\nimport '../../styles/ElectionBallot.css';\nconst propTypes = {\n  election: PropTypes.object,\n  onClose: PropTypes.func,\n  show: PropTypes.bool\n};\nconst defaultProps = {\n  election: {\n    options: []\n  },\n  onClose: () => {},\n  show: false\n};\n\nfunction ElectionBallot(props) {\n  const election = props.election,\n        onClose = props.onClose,\n        show = props.show;\n  const title = election.title,\n        totalVotes = election.totalVotes,\n        opens = election.opens,\n        closes = election.closes,\n        options = election.options,\n        categories = election.categories;\n  let numCategories = 1;\n  let pastCategory = options[0].category;\n  const initialSelectedOptions = options.map(option => {\n    if (option.category !== pastCategory) numCategories++;\n    pastCategory = option.category;\n    return {\n      category: option.category,\n      selected: false,\n      key: option.key\n    };\n  });\n  const initialCompleteCategories = Array(numCategories).fill().map(i => false);\n\n  const _useState = useState(initialSelectedOptions),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedOptions = _useState2[0],\n        setSelectedOptions = _useState2[1];\n\n  const _useState3 = useState(initialCompleteCategories),\n        _useState4 = _slicedToArray(_useState3, 2),\n        completeCategories = _useState4[0],\n        setCompleteCategories = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showModal = _useState6[0],\n        setShowModal = _useState6[1];\n\n  const _useState7 = useState(\"slide-in-right\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        animation = _useState8[0],\n        setAnimation = _useState8[1];\n\n  function handleUpdateSelections(key) {\n    let updatedSelectedOptions = [...selectedOptions];\n    let updatedCompleteCategories = [...completeCategories];\n    const category = options[key].category;\n    options.forEach(option => {\n      if (option.category === category) {\n        updatedSelectedOptions[option.key].selected = false;\n      }\n    });\n    updatedSelectedOptions[key].selected = true;\n    setSelectedOptions(updatedSelectedOptions);\n    updatedCompleteCategories[category] = true;\n    setCompleteCategories(updatedCompleteCategories);\n  }\n\n  function renderCategories(selectedOptions) {\n    const categories = completeCategories.map((_, i) => {\n      return React.createElement(\"div\", {\n        className: \"election-ballot-category-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, renderOptionCategory(i, selectedOptions), renderStatisticsCategory(i));\n    });\n    return categories;\n  }\n\n  function renderOptionCategory(category, selectedOptions) {\n    return React.createElement(\"div\", {\n      className: \"election-ballot-option-category-container\",\n      key: \"cat-\".concat(categories),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"election-ballot-category-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Selection for \", categories[category]), React.createElement(\"div\", {\n      className: \"election-ballot-options-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, renderOptions(category, selectedOptions)));\n  }\n\n  function renderOptions(category, selectedOptions) {\n    const relevantOptions = [...options].filter(item => {\n      return item.category === category;\n    });\n    const optionItems = relevantOptions.map((option, i) => {\n      return React.createElement(SelectableItem, {\n        onClick: () => handleUpdateSelections(option.key),\n        itemKey: option.key,\n        text: option.value,\n        selected: selectedOptions[option.key].selected === true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n    });\n    return optionItems;\n  }\n\n  function renderStatisticsCategory(category) {\n    const relevantResults = [...election.results].filter(item => {\n      return item.category === category;\n    });\n    return React.createElement(\"div\", {\n      className: \"election-ballot-statistics-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"election-ballot-category-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Statistics\"), React.createElement(\"div\", {\n      className: \"election-ballot-pie-chart-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(ReChartPieChart, {\n      data: relevantResults,\n      colors: ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(ElectionBallotReceipt, {\n    election: election,\n    onClose: () => setShowModal(false),\n    selectedOptions: selectedOptions,\n    show: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"election-ballot-container \".concat(animation),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"election-ballot-information-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"election-ballot-category-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Information\"), React.createElement(\"div\", {\n    className: \"election-ballot-election-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: \"election-ballot-information-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"election-ballot-election-detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(FiBookOpen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), \" Opens: \", opens), React.createElement(\"div\", {\n    className: \"election-ballot-election-detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(FiActivity, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), \" Votes: \", totalVotes), React.createElement(\"div\", {\n    className: \"election-ballot-election-detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(FiBook, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), \" Closes: \", closes))), renderCategories(selectedOptions), React.createElement(\"div\", {\n    className: \"election-ballot-footer-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"election-ballot-footer-step-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Step 1 of 2\"), React.createElement(\"div\", {\n    className: \"election-ballot-footer-buttons-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"election-ballot-footer-button-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(Button, {\n    text: \"Cancel\",\n    onClick: onClose,\n    variant: \"bg-error\",\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"election-ballot-footer-button-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(Button, {\n    text: \"Continue\",\n    onClick: () => setShowModal(true),\n    variant: \"bg-primary\",\n    size: \"lg\",\n    enabled: completeCategories.every(i => i === true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }))))));\n}\n\nfunction SelectableItem(props) {\n  const itemKey = props.itemKey,\n        onClick = props.onClick,\n        selected = props.selected,\n        text = props.text;\n  const variant = selected ? \" selected\" : \" not-selected\";\n  return React.createElement(\"div\", {\n    className: \"selectable-item-container\" + variant,\n    onClick: () => onClick(itemKey),\n    key: itemKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, text);\n}\n\nElectionBallot.propTypes = propTypes;\nElectionBallot.defaultProps = defaultProps;\nexport default ElectionBallot;","map":{"version":3,"sources":["/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/src/components/Voter/ElectionBallot.jsx"],"names":["React","useState","PropTypes","ElectionBallotReceipt","Button","ReChartPieChart","FiActivity","FiBookOpen","FiBook","propTypes","election","object","onClose","func","show","bool","defaultProps","options","ElectionBallot","props","title","totalVotes","opens","closes","categories","numCategories","pastCategory","category","initialSelectedOptions","map","option","selected","key","initialCompleteCategories","Array","fill","i","selectedOptions","setSelectedOptions","completeCategories","setCompleteCategories","showModal","setShowModal","animation","setAnimation","handleUpdateSelections","updatedSelectedOptions","updatedCompleteCategories","forEach","renderCategories","_","renderOptionCategory","renderStatisticsCategory","renderOptions","relevantOptions","filter","item","optionItems","value","relevantResults","results","every","SelectableItem","itemKey","onClick","text","variant"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,MAAjC,QAA+C,gBAA/C;AAEA,OAAO,8BAAP;AACA,OAAO,iCAAP;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAER,SAAS,CAACS,MADN;AAEdC,EAAAA,OAAO,EAAEV,SAAS,CAACW,IAFL;AAGdC,EAAAA,IAAI,EAAEZ,SAAS,CAACa;AAHF,CAAlB;AAMA,MAAMC,YAAY,GAAG;AACjBN,EAAAA,QAAQ,EAAE;AAACO,IAAAA,OAAO,EAAE;AAAV,GADO;AAEjBL,EAAAA,OAAO,EAAE,MAAM,CAAE,CAFA;AAGjBE,EAAAA,IAAI,EAAE;AAHW,CAArB;;AAMA,SAASI,cAAT,CAAwBC,KAAxB,EAA+B;AAAA,QAEvBT,QAFuB,GAKvBS,KALuB,CAEvBT,QAFuB;AAAA,QAGvBE,OAHuB,GAKvBO,KALuB,CAGvBP,OAHuB;AAAA,QAIvBE,IAJuB,GAKvBK,KALuB,CAIvBL,IAJuB;AAAA,QAQvBM,KARuB,GAcvBV,QAduB,CAQvBU,KARuB;AAAA,QASvBC,UATuB,GAcvBX,QAduB,CASvBW,UATuB;AAAA,QAUvBC,KAVuB,GAcvBZ,QAduB,CAUvBY,KAVuB;AAAA,QAWvBC,MAXuB,GAcvBb,QAduB,CAWvBa,MAXuB;AAAA,QAYvBN,OAZuB,GAcvBP,QAduB,CAYvBO,OAZuB;AAAA,QAavBO,UAbuB,GAcvBd,QAduB,CAavBc,UAbuB;AAgB3B,MAAIC,aAAa,GAAG,CAApB;AACA,MAAIC,YAAY,GAAGT,OAAO,CAAC,CAAD,CAAP,CAAWU,QAA9B;AACA,QAAMC,sBAAsB,GAAGX,OAAO,CAACY,GAAR,CAAYC,MAAM,IAAI;AACjD,QAAIA,MAAM,CAACH,QAAP,KAAoBD,YAAxB,EAAsCD,aAAa;AACnDC,IAAAA,YAAY,GAAGI,MAAM,CAACH,QAAtB;AACA,WACI;AACIA,MAAAA,QAAQ,EAAEG,MAAM,CAACH,QADrB;AAEII,MAAAA,QAAQ,EAAE,KAFd;AAGIC,MAAAA,GAAG,EAAEF,MAAM,CAACE;AAHhB,KADJ;AAOH,GAV8B,CAA/B;AAYA,QAAMC,yBAAyB,GAAGC,KAAK,CAACT,aAAD,CAAL,CAAqBU,IAArB,GAA4BN,GAA5B,CAAgCO,CAAC,IAAI,KAArC,CAAlC;;AA9B2B,oBAgCmBnC,QAAQ,CAAC2B,sBAAD,CAhC3B;AAAA;AAAA,QAgCpBS,eAhCoB;AAAA,QAgCHC,kBAhCG;;AAAA,qBAiCyBrC,QAAQ,CAACgC,yBAAD,CAjCjC;AAAA;AAAA,QAiCpBM,kBAjCoB;AAAA,QAiCAC,qBAjCA;;AAAA,qBAkCOvC,QAAQ,CAAC,KAAD,CAlCf;AAAA;AAAA,QAkCpBwC,SAlCoB;AAAA,QAkCTC,YAlCS;;AAAA,qBAmCOzC,QAAQ,CAAC,gBAAD,CAnCf;AAAA;AAAA,QAmCpB0C,SAnCoB;AAAA,QAmCTC,YAnCS;;AAqC3B,WAASC,sBAAT,CAAgCb,GAAhC,EAAqC;AACjC,QAAIc,sBAAsB,GAAG,CAAC,GAAGT,eAAJ,CAA7B;AACA,QAAIU,yBAAyB,GAAG,CAAC,GAAGR,kBAAJ,CAAhC;AAEA,UAAMZ,QAAQ,GAAGV,OAAO,CAACe,GAAD,CAAP,CAAaL,QAA9B;AACAV,IAAAA,OAAO,CAAC+B,OAAR,CAAgBlB,MAAM,IAAI;AACtB,UAAIA,MAAM,CAACH,QAAP,KAAoBA,QAAxB,EAAkC;AAC9BmB,QAAAA,sBAAsB,CAAChB,MAAM,CAACE,GAAR,CAAtB,CAAmCD,QAAnC,GAA8C,KAA9C;AACH;AACJ,KAJD;AAMAe,IAAAA,sBAAsB,CAACd,GAAD,CAAtB,CAA4BD,QAA5B,GAAuC,IAAvC;AACAO,IAAAA,kBAAkB,CAACQ,sBAAD,CAAlB;AAEAC,IAAAA,yBAAyB,CAACpB,QAAD,CAAzB,GAAsC,IAAtC;AACAa,IAAAA,qBAAqB,CAACO,yBAAD,CAArB;AACH;;AAED,WAASE,gBAAT,CAA0BZ,eAA1B,EAA2C;AACvC,UAAMb,UAAU,GAAGe,kBAAkB,CAACV,GAAnB,CAAuB,CAACqB,CAAD,EAAId,CAAJ,KAAU;AAChD,aACI;AAAK,QAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKe,oBAAoB,CAACf,CAAD,EAAIC,eAAJ,CADzB,EAEKe,wBAAwB,CAAChB,CAAD,CAF7B,CADJ;AAMH,KAPkB,CAAnB;AAQA,WAAOZ,UAAP;AACH;;AAED,WAAS2B,oBAAT,CAA8BxB,QAA9B,EAAwCU,eAAxC,EAAyD;AACrD,WACI;AAAK,MAAA,SAAS,EAAC,2CAAf;AAA2D,MAAA,GAAG,gBAASb,UAAT,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACuBA,UAAU,CAACG,QAAD,CADjC,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK0B,aAAa,CAAC1B,QAAD,EAAWU,eAAX,CADlB,CAJJ,CADJ;AAUH;;AAED,WAASgB,aAAT,CAAuB1B,QAAvB,EAAiCU,eAAjC,EAAkD;AAC9C,UAAMiB,eAAe,GAAG,CAAC,GAAGrC,OAAJ,EAAasC,MAAb,CAAoBC,IAAI,IAAI;AAChD,aAAOA,IAAI,CAAC7B,QAAL,KAAkBA,QAAzB;AACH,KAFuB,CAAxB;AAIA,UAAM8B,WAAW,GAAGH,eAAe,CAACzB,GAAhB,CAAoB,CAACC,MAAD,EAASM,CAAT,KAAe;AACnD,aACI,oBAAC,cAAD;AACI,QAAA,OAAO,EAAE,MAAMS,sBAAsB,CAACf,MAAM,CAACE,GAAR,CADzC;AAEI,QAAA,OAAO,EAAEF,MAAM,CAACE,GAFpB;AAGI,QAAA,IAAI,EAAEF,MAAM,CAAC4B,KAHjB;AAII,QAAA,QAAQ,EAAErB,eAAe,CAACP,MAAM,CAACE,GAAR,CAAf,CAA4BD,QAA5B,KAAyC,IAJvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAQH,KATmB,CAApB;AAUA,WAAO0B,WAAP;AACH;;AAED,WAASL,wBAAT,CAAkCzB,QAAlC,EAA4C;AACxC,UAAMgC,eAAe,GAAG,CAAC,GAAGjD,QAAQ,CAACkD,OAAb,EAAsBL,MAAtB,CAA6BC,IAAI,IAAI;AACzD,aAAOA,IAAI,CAAC7B,QAAL,KAAkBA,QAAzB;AACH,KAFuB,CAAxB;AAIA,WACI;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAII;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AACI,MAAA,IAAI,EAAEgC,eADV;AAEI,MAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CADJ;AAaH;;AAED,SACI,0CACI,oBAAC,qBAAD;AACI,IAAA,QAAQ,EAAEjD,QADd;AAEI,IAAA,OAAO,EAAE,MAAMgC,YAAY,CAAC,KAAD,CAF/B;AAGI,IAAA,eAAe,EAAEL,eAHrB;AAII,IAAA,IAAI,EAAEI,SAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI;AAAK,IAAA,SAAS,sCAA+BE,SAA/B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAII;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKvB,KADL,CAJJ,EAOI;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,cAC2BE,KAD3B,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,cAC2BD,UAD3B,CAJJ,EAOI;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eACwBE,MADxB,CAPJ,CAPJ,CADJ,EAoBK0B,gBAAgB,CAACZ,eAAD,CApBrB,EAqBI;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAII;AAAK,IAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEzB,OAA/B;AAAwC,IAAA,OAAO,EAAC,UAAhD;AAA2D,IAAA,IAAI,EAAC,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,OAAO,EAAE,MAAM8B,YAAY,CAAC,IAAD,CAF/B;AAGI,IAAA,OAAO,EAAC,YAHZ;AAII,IAAA,IAAI,EAAC,IAJT;AAKI,IAAA,OAAO,EAAEH,kBAAkB,CAACsB,KAAnB,CAAyBzB,CAAC,IAAIA,CAAC,KAAK,IAApC,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CAJJ,CArBJ,CAPJ,CADJ;AAmDH;;AAED,SAAS0B,cAAT,CAAwB3C,KAAxB,EAA+B;AAAA,QAEvB4C,OAFuB,GAMvB5C,KANuB,CAEvB4C,OAFuB;AAAA,QAGvBC,OAHuB,GAMvB7C,KANuB,CAGvB6C,OAHuB;AAAA,QAIvBjC,QAJuB,GAMvBZ,KANuB,CAIvBY,QAJuB;AAAA,QAKvBkC,IALuB,GAMvB9C,KANuB,CAKvB8C,IALuB;AAQ3B,QAAMC,OAAO,GAAGnC,QAAQ,GAAG,WAAH,GAAiB,eAAzC;AAEA,SACI;AAAK,IAAA,SAAS,EAAE,8BAA8BmC,OAA9C;AAAuD,IAAA,OAAO,EAAE,MAAMF,OAAO,CAACD,OAAD,CAA7E;AAAwF,IAAA,GAAG,EAAEA,OAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,IADL,CADJ;AAKH;;AAED/C,cAAc,CAACT,SAAf,GAA2BA,SAA3B;AACAS,cAAc,CAACF,YAAf,GAA8BA,YAA9B;AACA,eAAeE,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ElectionBallotReceipt from './ElectionBallotReceipt';\nimport Button from '../Common/Button';\nimport ReChartPieChart from '../Common/ReChartPieChart';\nimport { FiActivity, FiBookOpen, FiBook } from 'react-icons/fi';\n\nimport '../../styles/ColorScheme.css';\nimport '../../styles/ElectionBallot.css';\n\nconst propTypes = {\n    election: PropTypes.object,\n    onClose: PropTypes.func,\n    show: PropTypes.bool\n};\n\nconst defaultProps = {\n    election: {options: []},\n    onClose: () => {},\n    show: false\n}\n\nfunction ElectionBallot(props) {\n    const {\n        election,\n        onClose,\n        show\n    } = props;\n\n    const {\n        title,\n        totalVotes,\n        opens,\n        closes,\n        options,\n        categories\n    } = election;\n\n    let numCategories = 1;\n    let pastCategory = options[0].category;\n    const initialSelectedOptions = options.map(option => {\n        if (option.category !== pastCategory) numCategories++;\n        pastCategory = option.category;\n        return (\n            {\n                category: option.category,\n                selected: false,\n                key: option.key\n            }\n        );\n    });\n\n    const initialCompleteCategories = Array(numCategories).fill().map(i => false)\n\n    const [selectedOptions, setSelectedOptions] = useState(initialSelectedOptions);\n    const [completeCategories, setCompleteCategories] = useState(initialCompleteCategories);\n    const [showModal, setShowModal] = useState(false);\n    const [animation, setAnimation] = useState(\"slide-in-right\");\n\n    function handleUpdateSelections(key) {\n        let updatedSelectedOptions = [...selectedOptions];\n        let updatedCompleteCategories = [...completeCategories];\n\n        const category = options[key].category;\n        options.forEach(option => {\n            if (option.category === category) {\n                updatedSelectedOptions[option.key].selected = false;\n            }\n        });\n\n        updatedSelectedOptions[key].selected = true;\n        setSelectedOptions(updatedSelectedOptions);\n\n        updatedCompleteCategories[category] = true;\n        setCompleteCategories(updatedCompleteCategories);\n    }\n\n    function renderCategories(selectedOptions) {\n        const categories = completeCategories.map((_, i) => {\n            return (\n                <div className=\"election-ballot-category-container\">\n                    {renderOptionCategory(i, selectedOptions)}\n                    {renderStatisticsCategory(i)}\n                </div>\n            );\n        });\n        return categories;\n    }\n\n    function renderOptionCategory(category, selectedOptions) {\n        return (\n            <div className=\"election-ballot-option-category-container\" key={`cat-${categories}`}>\n                <div className=\"election-ballot-category-title\">\n                        Selection for {categories[category]}\n                    </div>\n                <div className=\"election-ballot-options-container\">\n                    {renderOptions(category, selectedOptions)}\n                </div>\n            </div>\n        );\n    }\n\n    function renderOptions(category, selectedOptions) {\n        const relevantOptions = [...options].filter(item => {\n            return item.category === category;\n        });\n\n        const optionItems = relevantOptions.map((option, i) => {\n            return (\n                <SelectableItem \n                    onClick={() => handleUpdateSelections(option.key)}\n                    itemKey={option.key} \n                    text={option.value} \n                    selected={selectedOptions[option.key].selected === true}\n                />\n            );\n        });\n        return optionItems;\n    }\n\n    function renderStatisticsCategory(category) {\n        const relevantResults = [...election.results].filter(item => {\n            return item.category === category;\n        });\n\n        return (\n            <div className=\"election-ballot-statistics-container\">\n                <div className=\"election-ballot-category-title\">\n                    Statistics\n                </div>\n                <div className=\"election-ballot-pie-chart-container\">\n                    <ReChartPieChart\n                        data={relevantResults}\n                        colors={['#0088FE', '#00C49F', '#FFBB28', '#FF8042']}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <ElectionBallotReceipt \n                election={election}\n                onClose={() => setShowModal(false)}\n                selectedOptions={selectedOptions} \n                show={showModal}\n            />\n            <div className={`election-ballot-container ${animation}`}>\n                <div className=\"election-ballot-information-container\">\n                    <div className=\"election-ballot-category-title\">\n                        Information\n                    </div>\n                    <div className=\"election-ballot-election-title\">\n                        {title}\n                    </div>\n                    <div className=\"election-ballot-information-row\">\n                        <div className=\"election-ballot-election-detail\">\n                            <FiBookOpen /> Opens: {opens}\n                        </div>\n                        <div className=\"election-ballot-election-detail\">\n                            <FiActivity /> Votes: {totalVotes}\n                        </div>\n                        <div className=\"election-ballot-election-detail\">\n                            <FiBook /> Closes: {closes}\n                        </div>\n                    </div>\n                </div>\n                {renderCategories(selectedOptions)}\n                <div className=\"election-ballot-footer-container\">\n                    <div className=\"election-ballot-footer-step-container\">\n                        Step 1 of 2\n                    </div>\n                    <div className=\"election-ballot-footer-buttons-container\">\n                        <div className=\"election-ballot-footer-button-container\">\n                            <Button text=\"Cancel\" onClick={onClose} variant=\"bg-error\" size=\"lg\" />\n                        </div>\n                        <div className=\"election-ballot-footer-button-container\">\n                            <Button\n                                text=\"Continue\"\n                                onClick={() => setShowModal(true)}\n                                variant=\"bg-primary\"\n                                size=\"lg\"\n                                enabled={completeCategories.every(i => i === true)}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nfunction SelectableItem(props) {\n    const {\n        itemKey,\n        onClick,\n        selected,\n        text\n    } = props;\n\n    const variant = selected ? \" selected\" : \" not-selected\"\n\n    return (\n        <div className={\"selectable-item-container\" + variant} onClick={() => onClick(itemKey)} key={itemKey}>\n            {text}\n        </div>\n    )\n}\n\nElectionBallot.propTypes = propTypes;\nElectionBallot.defaultProps = defaultProps;\nexport default ElectionBallot;"]},"metadata":{},"sourceType":"module"}