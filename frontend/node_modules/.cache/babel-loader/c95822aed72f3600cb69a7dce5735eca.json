{"ast":null,"code":"var _jsxFileName = \"/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/src/components/Voter/VoterDashboard.jsx\";\nimport React, { useContext } from 'react';\nimport VoterContext from '../../VoterContext';\nimport ElectionList from '../Voter/ElectionList';\nimport ElectionBallot from '../Voter/ElectionBallot';\nimport '../../styles/ColorScheme.css';\nimport '../../styles/VoterDashboard.css';\n\nfunction VoterDashboard(props) {\n  const elections = props.elections,\n        electionsLoaded = props.electionsLoaded,\n        isLoadingElections = props.isLoadingElections,\n        selectedElection = props.selectedElection;\n\n  const _useContext = useContext(VoterContext),\n        state = _useContext.state,\n        dispatch = _useContext.dispatch;\n\n  console.log(state); // Request election data\n  // Simple approach until we have backend to talk to\n\n  if (!electionsLoaded) {\n    dispatch({\n      type: \"attempLoadElections\"\n    });\n  }\n\n  function renderContents() {\n    if (state.selectedElection) {\n      return React.createElement(ElectionBallot, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(ElectionList, {\n      isLoading: isLoadingElections,\n      elections: state.elections,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"voter-dashboard-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, renderContents());\n}\n\nexport default VoterDashboard;","map":{"version":3,"sources":["/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/src/components/Voter/VoterDashboard.jsx"],"names":["React","useContext","VoterContext","ElectionList","ElectionBallot","VoterDashboard","props","elections","electionsLoaded","isLoadingElections","selectedElection","state","dispatch","console","log","type","renderContents"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,OAAO,8BAAP;AACA,OAAO,iCAAP;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA,QAEvBC,SAFuB,GAMvBD,KANuB,CAEvBC,SAFuB;AAAA,QAGvBC,eAHuB,GAMvBF,KANuB,CAGvBE,eAHuB;AAAA,QAIvBC,kBAJuB,GAMvBH,KANuB,CAIvBG,kBAJuB;AAAA,QAKvBC,gBALuB,GAMvBJ,KANuB,CAKvBI,gBALuB;;AAAA,sBAQCT,UAAU,CAACC,YAAD,CARX;AAAA,QAQnBS,KARmB,eAQnBA,KARmB;AAAA,QAQZC,QARY,eAQZA,QARY;;AAS3BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAT2B,CAW3B;AACA;;AACA,MAAI,CAACH,eAAL,EAAsB;AAClBI,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH;;AAED,WAASC,cAAT,GAA0B;AACtB,QAAIL,KAAK,CAACD,gBAAV,EAA4B;AACxB,aAAQ,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH;;AACD,WAAQ,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAED,kBAAzB;AAA6C,MAAA,SAAS,EAAEE,KAAK,CAACJ,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKS,cAAc,EADnB,CADJ;AAKH;;AAED,eAAeX,cAAf","sourcesContent":["import React, { useContext } from 'react';\n\nimport VoterContext from '../../VoterContext';\nimport ElectionList from '../Voter/ElectionList';\nimport ElectionBallot from '../Voter/ElectionBallot';\n\nimport '../../styles/ColorScheme.css';\nimport '../../styles/VoterDashboard.css';\n\nfunction VoterDashboard(props) {\n    const {\n        elections,\n        electionsLoaded,\n        isLoadingElections,\n        selectedElection\n    } = props;\n\n    const { state, dispatch } = useContext(VoterContext);\n    console.log(state);\n\n    // Request election data\n    // Simple approach until we have backend to talk to\n    if (!electionsLoaded) {\n        dispatch({ type: \"attempLoadElections\" });\n    }\n\n    function renderContents() {\n        if (state.selectedElection) {\n            return (<ElectionBallot />);\n        } \n        return (<ElectionList isLoading={isLoadingElections} elections={state.elections} />);\n    }\n\n    return (\n        <div className=\"voter-dashboard-container\">\n            {renderContents()}\n        </div>\n    );\n}\n\nexport default VoterDashboard;\n"]},"metadata":{},"sourceType":"module"}