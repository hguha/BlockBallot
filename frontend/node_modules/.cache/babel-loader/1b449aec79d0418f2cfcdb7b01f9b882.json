{"ast":null,"code":"import _slicedToArray from \"/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/src/components/Input.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/Input.css';\nimport '../styles/ColorScheme.css';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nconst propTypes = {\n  isDate: PropTypes.bool,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string\n};\nconst defaultProps = {\n  isDate: false,\n  onChange: () => {},\n  placeholder: ''\n};\n\nfunction Input(props) {\n  const isDate = props.isDate,\n        onChange = props.onChange,\n        placeholder = props.placeholder;\n\n  const _useState = useState(new Date()),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedDate = _useState2[0],\n        setSelectedDate = _useState2[1];\n\n  function handleDateChange(date) {\n    setSelectedDate(date);\n    onChange(date);\n  }\n\n  if (isDate) {\n    return React.createElement(\"div\", {\n      className: \"input-field-date-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      className: \"input-field\",\n      selected: selectedDate,\n      onChange: handleDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"input\", {\n    className: \"input-field\",\n    placeholder: placeholder,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  });\n}\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","map":{"version":3,"sources":["/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/src/components/Input.jsx"],"names":["React","useState","PropTypes","DatePicker","propTypes","isDate","bool","onChange","func","placeholder","string","defaultProps","Input","props","Date","selectedDate","setSelectedDate","handleDateChange","date"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,qBAAP;AACA,OAAO,2BAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,MAAM,EAAEH,SAAS,CAACI,IADJ;AAEdC,EAAAA,QAAQ,EAAEL,SAAS,CAACM,IAFN;AAGdC,EAAAA,WAAW,EAAEP,SAAS,CAACQ;AAHT,CAAlB;AAMA,MAAMC,YAAY,GAAG;AACjBN,EAAAA,MAAM,EAAE,KADS;AAEjBE,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFD;AAGjBE,EAAAA,WAAW,EAAE;AAHI,CAArB;;AAMA,SAASG,KAAT,CAAeC,KAAf,EAAsB;AAAA,QAEdR,MAFc,GAKdQ,KALc,CAEdR,MAFc;AAAA,QAGdE,QAHc,GAKdM,KALc,CAGdN,QAHc;AAAA,QAIdE,WAJc,GAKdI,KALc,CAIdJ,WAJc;;AAAA,oBAOsBR,QAAQ,CAAC,IAAIa,IAAJ,EAAD,CAP9B;AAAA;AAAA,QAOXC,YAPW;AAAA,QAOGC,eAPH;;AASlB,WAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AAC5BF,IAAAA,eAAe,CAACE,IAAD,CAAf;AACAX,IAAAA,QAAQ,CAACW,IAAD,CAAR;AACH;;AAED,MAAIb,MAAJ,EAAY;AACR,WACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,aAAtB;AAAoC,MAAA,QAAQ,EAAEU,YAA9C;AAA4D,MAAA,QAAQ,EAAEE,gBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AACD,SACI;AAAO,IAAA,SAAS,EAAC,aAAjB;AAA+B,IAAA,WAAW,EAAER,WAA5C;AAAyD,IAAA,QAAQ,EAAEF,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH;;AAEDK,KAAK,CAACR,SAAN,GAAkBA,SAAlB;AACAQ,KAAK,CAACD,YAAN,GAAqBA,YAArB;AACA,eAAeC,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/Input.css';\nimport '../styles/ColorScheme.css';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst propTypes = {\n    isDate: PropTypes.bool,\n    onChange: PropTypes.func,\n    placeholder: PropTypes.string\n};\n\nconst defaultProps = {\n    isDate: false,\n    onChange: () => {},\n    placeholder: ''\n};\n\nfunction Input(props) {\n    const {\n        isDate,\n        onChange,\n        placeholder\n    } = props;\n    \n    const [selectedDate, setSelectedDate] = useState(new Date());\n\n    function handleDateChange(date) {\n        setSelectedDate(date);\n        onChange(date);\n    }\n\n    if (isDate) {\n        return (\n            <div className=\"input-field-date-container\">\n                <DatePicker className=\"input-field\" selected={selectedDate} onChange={handleDateChange} />\n            </div>\n        );\n    }\n    return (\n        <input className=\"input-field\" placeholder={placeholder} onChange={onChange} />\n    );\n}\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;"]},"metadata":{},"sourceType":"module"}