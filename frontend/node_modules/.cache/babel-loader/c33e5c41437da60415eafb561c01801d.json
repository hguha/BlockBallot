{"ast":null,"code":"import _slicedToArray from \"/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/src/components/Admin/AdminDashboard.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Common/Button';\nimport CreateElectionModal from './CreateElectionModal';\nimport AdminSettings from './AdminSettings';\nimport '../../styles/Common/ColorScheme.css';\nimport '../../styles/Admin/AdminDashboard.css';\nimport logo from '../../assets/logos/logo.png';\nconst propTypes = {\n  organization: PropTypes.string,\n  username: PropTypes.string\n};\nconst defaultProps = {\n  organization: '',\n  username: ''\n};\n\nfunction AdminDashboard(props) {\n  const organization = props.organization,\n        username = props.username;\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentPage = _useState2[0],\n        setCurrentPage = _useState2[1];\n\n  function setPage(page) {\n    setCurrentPage(page);\n  }\n\n  function renderCurrentPage() {\n    switch (currentPage) {\n      case 0:\n        return React.createElement(AdminHome, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n\n      case 1:\n        return React.createElement(AdminSettings, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n\n      case 2:\n        //stuff with ending sessions\n        window.location.href = \"/admin\";\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"admin-dashboard-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(AdminSidebar, {\n    setPage: setPage,\n    organization: organization,\n    username: username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"admin-dashboard-current-page-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, renderCurrentPage()));\n}\n\nfunction AdminSidebar(props) {\n  const organization = props.organization,\n        username = props.username,\n        setPage = props.setPage,\n        _props$menuItems = props.menuItems,\n        menuItems = _props$menuItems === void 0 ? [{\n    name: \"Elections\",\n    page: 0\n  }, {\n    name: \"Settings\",\n    page: 1\n  }, {\n    name: \"Logout\",\n    page: 2\n  }] : _props$menuItems;\n\n  function sendData(page) {\n    props.setPage(page);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"admin-sidebar-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"admin-sidebar-user-icon-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"user-icon\",\n    className: \"admin-sidebar-user-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"admin-sidebar-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, username), React.createElement(\"div\", {\n    className: \"admin-sidebar-organization\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, organization), React.createElement(\"div\", {\n    className: \"admin-sidebar-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, menuItems.map(item => {\n    return React.createElement(\"div\", {\n      className: \"menu-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: () => sendData(item.page),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, item.name));\n  })));\n}\n\nfunction AdminHome(props) {\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showModal = _useState4[0],\n        setShowModal = _useState4[1];\n\n  function createElection() {\n    setShowModal(true);\n  }\n\n  const _props$username = props.username,\n        username = _props$username === void 0 ? \"Elections\" : _props$username,\n        parentCallback = props.parentCallback;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"create-election\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: createElection,\n    text: \"Create New Election\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(CreateElectionModal, {\n    onClose: () => {\n      setShowModal(false);\n    },\n    show: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }));\n}\n\nAdminDashboard.propTypes = propTypes;\nAdminDashboard.defaultProps = defaultProps;\nexport default AdminDashboard;","map":{"version":3,"sources":["/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/src/components/Admin/AdminDashboard.jsx"],"names":["React","useState","PropTypes","Button","CreateElectionModal","AdminSettings","logo","propTypes","organization","string","username","defaultProps","AdminDashboard","props","currentPage","setCurrentPage","setPage","page","renderCurrentPage","window","location","href","AdminSidebar","menuItems","name","sendData","map","item","AdminHome","showModal","setShowModal","createElection","parentCallback"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Common/Button';\nimport CreateElectionModal from './CreateElectionModal';\nimport AdminSettings from './AdminSettings';\n\nimport '../../styles/Common/ColorScheme.css';\nimport '../../styles/Admin/AdminDashboard.css';\nimport logo from '../../assets/logos/logo.png';\n\nconst propTypes = {\n    organization: PropTypes.string,\n    username: PropTypes.string\n}\n\nconst defaultProps = {\n    organization: '',\n    username: ''\n};\n\nfunction AdminDashboard(props) {\n    const {\n        organization,\n        username\n    } = props;\n\n\n    const [currentPage, setCurrentPage] = useState(0);\n\n    function setPage(page){\n      setCurrentPage(page)\n    }\n\n    function renderCurrentPage() {\n        switch(currentPage) {\n            case 0:\n                return(<AdminHome />);\n            case 1:\n                return(<AdminSettings />);\n            case 2:\n                //stuff with ending sessions\n                window.location.href = \"/admin\";\n        }\n    }\n\n    return (\n        <div className=\"admin-dashboard-container\">\n            <AdminSidebar setPage={setPage} organization={organization} username={username} />\n            <div className=\"admin-dashboard-current-page-container\">\n                {renderCurrentPage()}\n            </div>\n        </div>\n    );\n}\n\nfunction AdminSidebar(props) {\n    const {\n        organization,\n        username,\n        setPage,\n        menuItems = [\n            {\n                name : \"Elections\",\n                page :0\n            },\n            {\n                name : \"Settings\",\n                page: 1\n            },\n            {\n                name : \"Logout\",\n                page: 2\n            }\n        ]\n    } = props;\n\n    function sendData(page) {\n         props.setPage(page);\n    }\n\n    return (\n        <div className=\"admin-sidebar-container\">\n            <div className=\"admin-sidebar-user-icon-container\">\n                <img src={logo} alt=\"user-icon\" className=\"admin-sidebar-user-icon\" />\n            </div>\n            <div className=\"admin-sidebar-username\">\n                {username}\n            </div>\n            <div className=\"admin-sidebar-organization\">\n                {organization}\n            </div>\n            <div className=\"admin-sidebar-menu\">\n              {menuItems.map((item) => {\n                return <div className=\"menu-item\"><a onClick={() => sendData(item.page)}>{item.name}</a></div>\n              })}\n            </div>\n        </div>\n    )\n}\n\nfunction AdminHome(props) {\n    const [showModal, setShowModal] = useState(false);\n    function createElection() {\n        setShowModal(true);\n    }\n\n    const {\n        username = \"Elections\",\n        parentCallback\n    } = props;\n\n    return (\n        <div>\n            <div className = \"create-election\">\n                <Button onClick={createElection} text=\"Create New Election\"/>\n            </div>\n            <CreateElectionModal onClose={() => { setShowModal(false); }} show={showModal} />\n        </div>\n    )\n}\n\n\n\nAdminDashboard.propTypes = propTypes;\nAdminDashboard.defaultProps = defaultProps;\nexport default AdminDashboard;\n"]},"metadata":{},"sourceType":"module"}