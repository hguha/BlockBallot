{"ast":null,"code":"import _slicedToArray from \"/Users/benja/Desktop/electwise/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/benja/Desktop/electwise/frontend/src/components/Voter/VoterDashboard.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ElectionList from '../Voter/ElectionList';\nimport ElectionBallot from '../Voter/ElectionBallot';\nimport { getElections } from \"../../services/VoterService\";\nimport '../../styles/Common/ColorScheme.css';\nimport '../../styles/Voter/VoterDashboard.css';\nimport '../../styles/Common/Transitions.css';\n\nfunction VoterDashboard() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        elections = _useState2[0],\n        setElections = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoadingElections = _useState4[0],\n        setIsLoadingElections = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedElection = _useState6[0],\n        setSelectedElection = _useState6[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      setIsLoadingElections(true);\n      const response = await getElections();\n      console.log(response);\n      setIsLoadingElections(false);\n      setElections(response);\n    }\n\n    fetchData();\n  }, []);\n\n  function handleElectionClick(election) {\n    setSelectedElection(election);\n  }\n\n  function renderContents() {\n    if (selectedElection) {\n      return React.createElement(ElectionBallot, {\n        election: selectedElection,\n        onClose: () => setSelectedElection(null),\n        show: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(ElectionList, {\n      isLoading: isLoadingElections,\n      elections: elections,\n      onElectionClick: election => handleElectionClick(election),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"voter-dashboard-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, renderContents());\n}\n\nexport default VoterDashboard;","map":{"version":3,"sources":["/Users/benja/Desktop/electwise/frontend/src/components/Voter/VoterDashboard.jsx"],"names":["React","useState","useEffect","ElectionList","ElectionBallot","getElections","VoterDashboard","elections","setElections","isLoadingElections","setIsLoadingElections","selectedElection","setSelectedElection","fetchData","response","console","log","handleElectionClick","election","renderContents"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AAEA,OAAO,qCAAP;AACA,OAAO,uCAAP;AACA,OAAO,qCAAP;;AAEA,SAASC,cAAT,GAA0B;AAAA,oBACYL,QAAQ,CAAC,EAAD,CADpB;AAAA;AAAA,QACfM,SADe;AAAA,QACJC,YADI;;AAAA,qBAE8BP,QAAQ,CAAC,KAAD,CAFtC;AAAA;AAAA,QAEfQ,kBAFe;AAAA,QAEKC,qBAFL;;AAAA,qBAG0BT,QAAQ,CAAC,IAAD,CAHlC;AAAA;AAAA,QAGfU,gBAHe;AAAA,QAGGC,mBAHH;;AAKtBV,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeW,SAAf,GAA2B;AACvBH,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACA,YAAMI,QAAQ,GAAG,MAAMT,YAAY,EAAnC;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAJ,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAF,MAAAA,YAAY,CAACM,QAAD,CAAZ;AACH;;AAEDD,IAAAA,SAAS;AACZ,GAVQ,EAUN,EAVM,CAAT;;AAYA,WAASI,mBAAT,CAA6BC,QAA7B,EAAuC;AACnCN,IAAAA,mBAAmB,CAACM,QAAD,CAAnB;AACH;;AAED,WAASC,cAAT,GAA0B;AACtB,QAAIR,gBAAJ,EAAsB;AAClB,aACI,oBAAC,cAAD;AACI,QAAA,QAAQ,EAAEA,gBADd;AAEI,QAAA,OAAO,EAAE,MAAMC,mBAAmB,CAAC,IAAD,CAFtC;AAGI,QAAA,IAAI,EAAE,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAOH;;AACD,WACI,oBAAC,YAAD;AACI,MAAA,SAAS,EAAEH,kBADf;AAEI,MAAA,SAAS,EAAEF,SAFf;AAGI,MAAA,eAAe,EAAGW,QAAD,IAAcD,mBAAmB,CAACC,QAAD,CAHtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,cAAc,EADnB,CADJ;AAKH;;AAED,eAAeb,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport ElectionList from '../Voter/ElectionList';\nimport ElectionBallot from '../Voter/ElectionBallot';\nimport { getElections } from \"../../services/VoterService\";\n\nimport '../../styles/Common/ColorScheme.css';\nimport '../../styles/Voter/VoterDashboard.css';\nimport '../../styles/Common/Transitions.css';\n\nfunction VoterDashboard() {\n    const [elections, setElections] = useState([]);\n    const [isLoadingElections, setIsLoadingElections] = useState(false);\n    const [selectedElection, setSelectedElection] = useState(null);\n\n    useEffect(() => {\n        async function fetchData() {\n            setIsLoadingElections(true);\n            const response = await getElections();\n            console.log(response);\n            setIsLoadingElections(false);\n            setElections(response);\n        }\n\n        fetchData();\n    }, []);\n\n    function handleElectionClick(election) {\n        setSelectedElection(election);\n    }\n\n    function renderContents() {\n        if (selectedElection) {\n            return (\n                <ElectionBallot\n                    election={selectedElection}\n                    onClose={() => setSelectedElection(null) }\n                    show={true}\n                />\n            );\n        } \n        return (\n            <ElectionList\n                isLoading={isLoadingElections}\n                elections={elections} \n                onElectionClick={(election) => handleElectionClick(election)} \n            />\n        );\n    }\n\n    return (\n        <div className=\"voter-dashboard-container\">\n            {renderContents()}\n        </div>\n    );\n}\n\nexport default VoterDashboard;\n"]},"metadata":{},"sourceType":"module"}