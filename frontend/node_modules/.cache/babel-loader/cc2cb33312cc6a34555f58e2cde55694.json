{"ast":null,"code":"import _slicedToArray from \"/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/src/components/Voter/VoterDashboard.jsx\";\nimport React, { useEffect, useReducer } from 'react';\nimport { VoterReducer } from '../../VoterReducer';\nimport ElectionList from '../Voter/ElectionList';\nimport '../../styles/ColorScheme.css';\nimport '../../styles/VoterDashboard.css';\n\nfunction VoterDashboard() {\n  const initialState = {\n    isLoadingElections: false\n  };\n\n  const _useReducer = useReducer(VoterReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  useEffect(() => {\n    console.log(\"in effect\");\n    dispatch({\n      type: 'isLoadingElections',\n      value: true\n    });\n    dispatch({\n      type: 'retrieveVoterElections'\n    });\n    console.log(state);\n  }, [state.isLoadingElections]);\n\n  if (state.isLoadingElections === false) {\n    dispatch({\n      type: 'isLoadingElections',\n      value: true\n    });\n  }\n\n  let content;\n\n  if (state.isLoadingElections) {\n    content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"loading\");\n  } else {\n    content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"not loading\");\n  }\n\n  return React.createElement(\"div\", {\n    className: \"voter-dashboard-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, content, React.createElement(ElectionList, {\n    isLoading: state.isLoadingElections,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n}\n\nexport default VoterDashboard;","map":{"version":3,"sources":["/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/src/components/Voter/VoterDashboard.jsx"],"names":["React","useEffect","useReducer","VoterReducer","ElectionList","VoterDashboard","initialState","isLoadingElections","state","dispatch","console","log","type","value","content"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AAEA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,OAAO,8BAAP;AACA,OAAO,iCAAP;;AAEA,SAASC,cAAT,GAA0B;AACtB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,kBAAkB,EAAE;AADH,GAArB;;AADsB,sBAKIL,UAAU,CAACC,YAAD,EAAeG,YAAf,CALd;AAAA;AAAA,QAKfE,KALe;AAAA,QAKRC,QALQ;;AAOtBR,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,oBAAR;AAA8BC,MAAAA,KAAK,EAAE;AAArC,KAAD,CAAR;AACAJ,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH,GALQ,EAKN,CAACA,KAAK,CAACD,kBAAP,CALM,CAAT;;AAOA,MAAIC,KAAK,CAACD,kBAAN,KAA6B,KAAjC,EAAwC;AACpCE,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,oBAAR;AAA8BC,MAAAA,KAAK,EAAE;AAArC,KAAD,CAAR;AACH;;AAED,MAAIC,OAAJ;;AACA,MAAIN,KAAK,CAACD,kBAAV,EAA8B;AAC1BO,IAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAV;AACH,GAFD,MAEO;AACHA,IAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAV;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,OADL,EAEI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEN,KAAK,CAACD,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;;AAED,eAAeF,cAAf","sourcesContent":["import React, { useEffect, useReducer } from 'react';\n\nimport { VoterReducer } from '../../VoterReducer';\nimport ElectionList from '../Voter/ElectionList';\n\nimport '../../styles/ColorScheme.css';\nimport '../../styles/VoterDashboard.css';\n\nfunction VoterDashboard() {\n    const initialState = {\n        isLoadingElections: false\n    };\n\n    const [state, dispatch] = useReducer(VoterReducer, initialState);\n\n    useEffect(() => {\n        console.log(\"in effect\");\n        dispatch({ type: 'isLoadingElections', value: true });\n        dispatch({ type: 'retrieveVoterElections' });\n        console.log(state);\n    }, [state.isLoadingElections]);\n\n    if (state.isLoadingElections === false) {\n        dispatch({ type: 'isLoadingElections', value: true });\n    }\n\n    let content;\n    if (state.isLoadingElections) {\n        content = <div>loading</div>\n    } else {\n        content = <div>not loading</div>\n    }\n\n    return (\n        <div className=\"voter-dashboard-container\">\n            {content}\n            <ElectionList isLoading={state.isLoadingElections} />\n        </div>\n    );\n}\n\nexport default VoterDashboard;\n"]},"metadata":{},"sourceType":"module"}