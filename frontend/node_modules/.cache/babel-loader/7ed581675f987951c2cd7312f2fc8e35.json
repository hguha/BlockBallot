{"ast":null,"code":"var _jsxFileName = \"/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/src/components/Voter/VoterDashboard.jsx\";\nimport React, { useReducer } from 'react';\nimport { VoterReducer } from '../../VoterReducer';\nimport ElectionList from '../Voter/ElectionList';\nimport ElectionBallot from '../Voter/ElectionBallot';\nimport '../../styles/ColorScheme.css';\nimport '../../styles/VoterDashboard.css';\n\nfunction VoterDashboard() {\n  const initialState = {\n    elections: [],\n    electionsLoaded: false,\n    isLoadingElections: false,\n    selectedElection: null\n  }; // const [state, dispatch] = useReducer(VoterReducer, initialState);\n  // Request election data\n  // Simple approach until we have backend to talk to\n\n  if (!state.electionsLoaded) {// dispatch({ type: \"attempLoadElections\" });\n  }\n\n  console.log(state);\n\n  function handleElectionClick(election) {\n    console.log(\"here\");\n    console.log(election);\n    dispatch({\n      type: \"openBallot\",\n      data: election\n    });\n  }\n\n  function renderContents() {\n    if (state.selectedElection) {\n      return React.createElement(ElectionBallot, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(ElectionList, {\n      isLoading: state.isLoadingElections,\n      elections: state.elections,\n      onElectionClick: election => handleElectionClick(election),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"voter-dashboard-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, renderContents());\n}\n\nexport default VoterDashboard;","map":{"version":3,"sources":["/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/src/components/Voter/VoterDashboard.jsx"],"names":["React","useReducer","VoterReducer","ElectionList","ElectionBallot","VoterDashboard","initialState","elections","electionsLoaded","isLoadingElections","selectedElection","state","console","log","handleElectionClick","election","dispatch","type","data","renderContents"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,OAAO,8BAAP;AACA,OAAO,iCAAP;;AAEA,SAASC,cAAT,GAA0B;AACtB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,SAAS,EAAE,EADM;AAEjBC,IAAAA,eAAe,EAAE,KAFA;AAGjBC,IAAAA,kBAAkB,EAAE,KAHH;AAIjBC,IAAAA,gBAAgB,EAAE;AAJD,GAArB,CADsB,CAQtB;AAEA;AACA;;AACA,MAAI,CAACC,KAAK,CAACH,eAAX,EAA4B,CACxB;AACH;;AAEDI,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAEA,WAASG,mBAAT,CAA6BC,QAA7B,EAAuC;AACnCH,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,IAAI,EAAEH;AAA5B,KAAD,CAAR;AACH;;AAED,WAASI,cAAT,GAA0B;AACtB,QAAIR,KAAK,CAACD,gBAAV,EAA4B;AACxB,aAAQ,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH;;AACD,WACI,oBAAC,YAAD;AACI,MAAA,SAAS,EAAEC,KAAK,CAACF,kBADrB;AAEI,MAAA,SAAS,EAAEE,KAAK,CAACJ,SAFrB;AAGI,MAAA,eAAe,EAAGQ,QAAD,IAAcD,mBAAmB,CAACC,QAAD,CAHtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKI,cAAc,EADnB,CADJ;AAKH;;AAED,eAAed,cAAf","sourcesContent":["import React, { useReducer } from 'react';\n\nimport { VoterReducer } from '../../VoterReducer';\nimport ElectionList from '../Voter/ElectionList';\nimport ElectionBallot from '../Voter/ElectionBallot';\n\nimport '../../styles/ColorScheme.css';\nimport '../../styles/VoterDashboard.css';\n\nfunction VoterDashboard() {\n    const initialState = {\n        elections: [],\n        electionsLoaded: false,\n        isLoadingElections: false,\n        selectedElection: null\n    };\n\n    // const [state, dispatch] = useReducer(VoterReducer, initialState);\n\n    // Request election data\n    // Simple approach until we have backend to talk to\n    if (!state.electionsLoaded) {\n        // dispatch({ type: \"attempLoadElections\" });\n    }\n\n    console.log(state);\n\n    function handleElectionClick(election) {\n        console.log(\"here\");\n        console.log(election);\n        dispatch({ type: \"openBallot\", data: election });\n    }\n\n    function renderContents() {\n        if (state.selectedElection) {\n            return (<ElectionBallot />);\n        } \n        return (\n            <ElectionList \n                isLoading={state.isLoadingElections}\n                elections={state.elections} \n                onElectionClick={(election) => handleElectionClick(election)} \n            />\n        );\n    }\n\n    return (\n        <div className=\"voter-dashboard-container\">\n            {renderContents()}\n        </div>\n    );\n}\n\nexport default VoterDashboard;\n"]},"metadata":{},"sourceType":"module"}