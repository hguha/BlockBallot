{"ast":null,"code":"import _slicedToArray from \"/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/src/components/Voter/VoterDashboard.jsx\";\nimport React, { useReducer } from 'react';\nimport { VoterReducer } from '../../VoterReducer';\nimport VoterContext from '../../VoterContext';\nimport ElectionList from '../Voter/ElectionList';\nimport ElectionBallot from '../Voter/ElectionBallot';\nimport '../../styles/ColorScheme.css';\nimport '../../styles/VoterDashboard.css';\n\nfunction VoterDashboard() {\n  const initialState = {\n    elections: [],\n    electionsLoaded: false,\n    selectedElection: null\n  };\n\n  const _useReducer = useReducer(VoterReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Request election data\n  // Simple approach until we have backend to talk to\n\n\n  if (!state.electionsLoaded) {\n    dispatch({\n      type: \"attempLoadElections\"\n    });\n  }\n\n  function renderContents() {\n    if (selectedElection) {\n      return React.createElement(ElectionBallot, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(ElectionList, {\n      isLoading: state.isLoadingElections,\n      elections: state.elections,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(VoterContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"voter-dashboard-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, renderContents()));\n}\n\nexport default VoterDashboard;","map":{"version":3,"sources":["/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/src/components/Voter/VoterDashboard.jsx"],"names":["React","useReducer","VoterReducer","VoterContext","ElectionList","ElectionBallot","VoterDashboard","initialState","elections","electionsLoaded","selectedElection","state","dispatch","type","renderContents","isLoadingElections"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,OAAO,8BAAP;AACA,OAAO,iCAAP;;AAEA,SAASC,cAAT,GAA0B;AACtB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,SAAS,EAAE,EADM;AAEjBC,IAAAA,eAAe,EAAE,KAFA;AAGjBC,IAAAA,gBAAgB,EAAE;AAHD,GAArB;;AADsB,sBAOIT,UAAU,CAACC,YAAD,EAAeK,YAAf,CAPd;AAAA;AAAA,QAOfI,KAPe;AAAA,QAORC,QAPQ,oBAStB;AACA;;;AACA,MAAI,CAACD,KAAK,CAACF,eAAX,EAA4B;AACxBG,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH;;AAED,WAASC,cAAT,GAA0B;AACtB,QAAIJ,gBAAJ,EAAsB;AAClB,aAAQ,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH;;AACD,WAAQ,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAEC,KAAK,CAACI,kBAA/B;AAAmD,MAAA,SAAS,EAAEJ,KAAK,CAACH,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH;;AAED,SACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,cAAc,EADnB,CADJ,CADJ;AAOH;;AAED,eAAeR,cAAf","sourcesContent":["import React, { useReducer } from 'react';\n\nimport { VoterReducer } from '../../VoterReducer';\nimport VoterContext from '../../VoterContext';\nimport ElectionList from '../Voter/ElectionList';\nimport ElectionBallot from '../Voter/ElectionBallot';\n\nimport '../../styles/ColorScheme.css';\nimport '../../styles/VoterDashboard.css';\n\nfunction VoterDashboard() {\n    const initialState = {\n        elections: [],\n        electionsLoaded: false,\n        selectedElection: null\n    };\n\n    const [state, dispatch] = useReducer(VoterReducer, initialState);\n\n    // Request election data\n    // Simple approach until we have backend to talk to\n    if (!state.electionsLoaded) {\n        dispatch({ type: \"attempLoadElections\" });\n    }\n\n    function renderContents() {\n        if (selectedElection) {\n            return (<ElectionBallot />);\n        } \n        return (<ElectionList isLoading={state.isLoadingElections} elections={state.elections} />);\n    }\n\n    return (\n        <VoterContext.Provider value={{ state, dispatch }}>\n            <div className=\"voter-dashboard-container\">\n                {renderContents()}\n            </div>\n        </VoterContext.Provider>\n    );\n}\n\nexport default VoterDashboard;\n"]},"metadata":{},"sourceType":"module"}