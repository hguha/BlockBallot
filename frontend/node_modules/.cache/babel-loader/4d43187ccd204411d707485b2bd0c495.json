{"ast":null,"code":"import _slicedToArray from \"/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/src/components/Voter/VoterDashboard.jsx\";\nimport React, { useReducer } from 'react';\nimport { VoterReducer } from '../../VoterReducer';\nimport VoterContext from '../../VoterContext';\nimport ElectionList from '../Voter/ElectionList';\nimport '../../styles/ColorScheme.css';\nimport '../../styles/VoterDashboard.css';\n\nfunction VoterDashboard() {\n  const initialState = {\n    electionsLoaded: false,\n    elections: []\n  };\n\n  const _useReducer = useReducer(VoterReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Request election data\n  // Simple approach until we have backend to talk to\n\n\n  if (!state.electionsLoaded) {\n    dispatch({\n      type: \"attempLoadElections\"\n    });\n  }\n\n  return React.createElement(VoterContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"voter-dashboard-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(ElectionList, {\n    isLoading: state.isLoadingElections,\n    elections: state.elections,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })));\n}\n\nexport default VoterDashboard;","map":{"version":3,"sources":["/Users/benja/Library/Mobile Documents/com~apple~CloudDocs/School/Senior/EECS 581/ElectWise/elect-wise/src/components/Voter/VoterDashboard.jsx"],"names":["React","useReducer","VoterReducer","VoterContext","ElectionList","VoterDashboard","initialState","electionsLoaded","elections","state","dispatch","type","isLoadingElections"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,OAAO,8BAAP;AACA,OAAO,iCAAP;;AAEA,SAASC,cAAT,GAA0B;AACtB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,eAAe,EAAE,KADA;AAEjBC,IAAAA,SAAS,EAAE;AAFM,GAArB;;AADsB,sBAMIP,UAAU,CAACC,YAAD,EAAeI,YAAf,CANd;AAAA;AAAA,QAMfG,KANe;AAAA,QAMRC,QANQ,oBAQtB;AACA;;;AACA,MAAI,CAACD,KAAK,CAACF,eAAX,EAA4B;AACxBG,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH;;AAED,SACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEF,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAED,KAAK,CAACG,kBAA/B;AAAmD,IAAA,SAAS,EAAEH,KAAK,CAACD,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAOH;;AAED,eAAeH,cAAf","sourcesContent":["import React, { useReducer } from 'react';\n\nimport { VoterReducer } from '../../VoterReducer';\nimport VoterContext from '../../VoterContext';\nimport ElectionList from '../Voter/ElectionList';\n\nimport '../../styles/ColorScheme.css';\nimport '../../styles/VoterDashboard.css';\n\nfunction VoterDashboard() {\n    const initialState = {\n        electionsLoaded: false,\n        elections: []\n    };\n\n    const [state, dispatch] = useReducer(VoterReducer, initialState);\n\n    // Request election data\n    // Simple approach until we have backend to talk to\n    if (!state.electionsLoaded) {\n        dispatch({ type: \"attempLoadElections\" });\n    }\n\n    return (\n        <VoterContext.Provider value={{ state, dispatch }}>\n            <div className=\"voter-dashboard-container\">\n                <ElectionList isLoading={state.isLoadingElections} elections={state.elections} />\n            </div>\n        </VoterContext.Provider>\n    );\n}\n\nexport default VoterDashboard;\n"]},"metadata":{},"sourceType":"module"}